AWSTemplateFormatVersion: '2010-09-09'
Description: '(qs-1nltbq5f3) OpenShift+VPC, License: Apache 2.0 (Please do not remove)
  April, 6, 2018'
Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - W
        - E9101
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VPCID
          - VPCCIDR
          - PrivateSubnet1ID
          - PrivateSubnet2ID
          - PrivateSubnet3ID
          - PublicSubnet1ID
          - PublicSubnet2ID
          - PublicSubnet3ID
          - SSLCertificateId
          - ClusterIngressPrivateKeySecretName
          - ClusterIngressCertificateArn
          - ContainerAccessCIDR
          - RemoteAccessCIDR
          - HostedZoneID
          - HostedZoneName
          - Internal
      - Label:
          default: Amazon EC2 Configuration
        Parameters:
          - AmiId
      - Label:
          default: OpenShift Hosts Configuration
        Parameters:
          - MasterInstanceType
          - NodesInstanceType
      - Label:
          default: OpenShift Configuration
        Parameters:
          - OpenshiftContainerPlatformVersion
          - EnableBootstrap
          - ClusterName
          - OpenShiftMirrorURL
          - OpenShiftClientBinary
          - OpenShiftVersion
          - OpenShiftInstallBinary
          - PullSecret
          - SSHKey
          - MasterInstanceProfileName
          - WorkerInstanceProfileName
      - Label:
          default: CloudFormation Meta
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
          - QSS3BucketRegion
    ParameterLabels:
      RemoteAccessCIDR:
        default: Allowed External Access CIDR (OCP UI)
      ContainerAccessCIDR:
        default: Allowed External Access CIDR (OCP Router)
      MasterInstanceProfileName:
        default: Master IAM Instance Profile Name
      WorkerInstanceProfileName:
        default: Worker IAM Instance Profile Name
      SSLCertificateId:
        default: SSL Certificate ID
      PullSecret:
        default: Redhat Pull Secret
      OpenShiftMirrorURL:
        default: OpenShift Mirror URL
      OpenShiftClientBinary:
        default: OpenShift Client Binary
      OpenShiftVersion:
        default: OpenShift Version
      OpenShiftInstallBinary:
        default: OpenShfit Install Binary
      AmiId:
        default: AMI ID
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
      QSS3BucketRegion:
        default: Quick Start S3 Bucket Region
      VPCID:
        default: VPC ID
      MasterInstanceType:
        default: Master Instance Type
      NodesInstanceType:
        default: Nodes Instance Type
      OpenshiftContainerPlatformVersion:
        default: Openshift Container Platform Version
      ClusterName:
        default: Cluster Name
      PrivateSubnet3ID:
        default: Private Subnet 3 ID
      PrivateSubnet2ID:
        default: Private Subnet 2 ID
      PrivateSubnet1ID:
        default: Private Subnet 1 ID
      PublicSubnet1ID:
        default: Public Subnet 1 ID
      PublicSubnet2ID:
        default: Public Subnet 2 ID
      PublicSubnet3ID:
        default: Public Subnet 3 ID
      ClusterIngressPrivateKeySecretName:
        default: Cluster Ingress Private Key Secret Name
      ClusterIngressCertificateArn:
        default: Cluster Ingress Certificate ARN
      HostedZoneID:
        default: Route 53 Hosted Zone ID
      Internal:
        default: Is the Cluster internal
Parameters:
  MasterInstanceProfileName:
    Description: (Optional) Provide an IAM Instance profile name to use for control plane nodes
    Type: String
    Default: ''
  WorkerInstanceProfileName:
    Description: (Optional) Provide an IAM Instance profile name to use for worker nodes
    Type: String
    Default: ''
  HostedZoneName:
    Description: The managed Route53 Zone name
    Type: String
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Description: CIDR block for the VPC
    Type: String
  PrivateSubnet1ID:
    Description: ID of private subnet 1 in Availability Zone 1 for the Workload (e.g.,
      subnet-a0246dcd)
    Type: String
  PrivateSubnet2ID:
    Description: ID of private subnet 2 in Availability Zone 2 for the Workload (e.g.,
      subnet-b1f432cd)
    Type: String
  PrivateSubnet3ID:
    Description: ID of private subnet 3 in Availability Zone 3 for the Workload (e.g.,
      subnet-b1f4a2cd)
    Type: String
  PublicSubnet1ID:
    Description: ID of private subnet 1 in Availability Zone 1 for the Workload (e.g.,
      subnet-a0246dcd)
    Type: String
    Default: ""
  PublicSubnet2ID:
    Description: ID of private subnet 2 in Availability Zone 2 for the Workload (e.g.,
      subnet-b1f432cd)
    Type: String
    Default: ""
  PublicSubnet3ID:
    Description: ID of private subnet 3 in Availability Zone 3 for the Workload (e.g.,
      subnet-b1f4a2cd)
    Type: String
    Default: ""
  NumberOfNodes:
    Default: '3'
    Description: The desired capacity for the OpenShift node instances
    Type: Number
  AmiId:
    Description: >-
      OPTIONAL: bring your own AMI. In Enterprise environment, you might
      need to bring your own AMI (with proxy, softwares, ...).
      If the AMI is encrypted, keep in mind that the key policy should allow use of
      the key from AWSServiceRoleForAutoScaling.
      If left blank, we'll use the base RHEL image from your region.
    Type: String
    Default: ""
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/.]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-redhat-openshift/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is
      hosted. When using your own bucket, you must specify this value.
    Type: String
  OpenshiftContainerPlatformVersion:
    Description: OpenShift version to deploy
    Default: '4.8'
    Type: String
    AllowedValues:
      - '4.3'
      - '4.5'
      - '4.6'
      - '4.8'
  VPCID:
    Description: ID of your existing VPC for deployment
    Type: AWS::EC2::VPC::Id
  PullSecret:
    Description: 'The OCP Pull Secret JSON'
    Type: String
    NoEcho: 'true'
  EnableBootstrap:
    Type: String
    Description: Allows users to use CloudFormation to clean up the Bootstrap server. When the cluster is first created,
      this should be set to "yes" (Default). After the cluster is created and healthy, you can set this to "no" and
      update the Stack.
    AllowedValues:
      - 'yes'
      - 'no'
    Default: 'yes'
  Internal:
    Type: String
    Description: Create the Cluster in internal mode
    AllowedValues:
      - 'yes'
      - 'no'
    Default: 'no'
  MasterInstanceType:
    Default: m5.xlarge
    AllowedValues:
      - t3.xlarge
      - t3.2xlarge
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5a.4xlarge
      - m5a.8xlarge
      - m5a.12xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5.18xlarge
      - c5.24xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
    ConstraintDescription: Must contain valid instance type
    Description: Type of EC2 instance for the Master instances
    Type: String
  NodesInstanceType:
    Default: m5.xlarge
    AllowedValues:
      - t3.xlarge
      - t3.2xlarge
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5a.4xlarge
      - m5a.8xlarge
      - m5a.12xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5.18xlarge
      - c5.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
    ConstraintDescription: Must contain valid instance type
    Description: Type of EC2 instance for the Node instances
    Type: String
  ClusterName:
    AllowedPattern: ".+"
    Default: "Required"
    Description: Required, cluster name is required for OCP 4.x
    Type: String
  AvailabilityZones:
    Description: Comma-delimited list of Availability Zones to use
    Type: String
  RemoteAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: The CIDR IP range that is permitted to access the instances We recommend
      that you set this value to a trusted IP range.
    Type: String
  ContainerAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: The CIDR IP range that is permitted to access the instances We recommend
      that you set this value to a trusted IP range.
    Type: String
  HostedZoneID:
    Description: 'Required: Route 53 Hosted Zone ID to use.'
    Type: String
    AllowedPattern: ".+"
    Default: "Required"
  ClusterIngressPrivateKeySecretName:
    Description: AWS Secrets Manager name for the SSL Private Key for the certificate in ACM. If provided, Quickstart will load your Certificate and Key into the OpenShift cluster.
    Type: String
    Default: ''
  ClusterIngressCertificateArn:
    Description: Optional ACM ARN for a SSL Certificate to import into the default OpenShift ingress. Must be certificate signed for your cluster's wildcard domain. Requires `ClusterIngressPrivateKeySecretName`
    Type: String
    Default: ''
  SSLCertificateId:
    Type: String
    Description: (Optional) The AWS ACM SSL Certificate ARN to use for LoadBalancer configuration
    Default: ''
  LogLevel:
    Description: 'Log Level to use for the OpenShift4 Installer'
    Default: DEBUG
    AllowedValues:
      - DEBUG
      - INFO
      - ERROR
      - WARNING
    Type: String
  OpenShiftMirrorURL:
    Description: The Mirror to fetch the OpenShift installation program
    Type: String
    Default: 'https://mirror.openshift.com/pub/openshift-v4/clients/ocp/'
  OpenShiftClientBinary:
    Description: Name of the OpenShiftClient Binary
    Default: openshift-client
    Type: String
  OpenShiftVersion:
    Description: The full version of the OpenShift cluster to install
    Type: String
  OpenShiftInstallBinary:
    Default: openshift-install
    Description: Name of the OpenShift Installation binary
    Type: String
  SSHKey:
    Description: The public key to be added to the CoreOS boxes for ssh access.
    Default: ""
    Type: String
Resources:
  #
  # Create an S3 Bucket for storing Cluster startup files (bootstrap.ign, master.ign, worker.ign)
  #
  IgnitionBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
            BucketKeyEnabled: true
  #
  # OpenShift4 requires valid AWS Access Keys at installation time.
  #
  # assuming an IAM Role _will not work_ because OpenShift4 will store these keys in the cluster and continue using
  # them for administrative tasks (e.g. autoscaling, ingress management, etc.)
  #
  OpenShift4ClusterManagerAccessKeys:
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - EIAMPolicyActionWildcard
            - EIAMPolicyWildcardResource
          ignore_reasons:
            EIAMPolicyActionWildcard: Need to administer the resources
            EIAMPolicyWildcardResource: EC2 doesn't support resource-level permissions
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref OpenShift4ClusterManagerUser
  OpenShift4ClusterManagerUser:
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - EIAMPolicyActionWildcard
            - EIAMPolicyWildcardResource
          ignore_reasons:
            EIAMPolicyActionWildcard: Need to administer the resources
            EIAMPolicyWildcardResource: EC2 doesn't support resource-level permissions
    Type: AWS::IAM::User
    Properties:
      Policies:
        - PolicyName: ClusterManagementPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource: "*"
                Action:
                  - ec2:*
                  - s3:*
                  - elasticloadbalancing:*
                  - iam:AddRoleToInstanceProfile
                  - iam:CreateInstanceProfile
                  - iam:CreateRole
                  - iam:DeleteInstanceProfile
                  - iam:DeleteRole
                  - iam:DeleteRolePolicy
                  - iam:Get*
                  - iam:List*
                  - iam:PassRole
                  - iam:PutRolePolicy
                  - iam:SimulatePrincipalPolicy
                  - iam:TagRole
                  - iam:RemoveRoleFromInstanceProfile
                  - route53:ListTagsForResource
                  - route53:UpdateHostedZoneComment
                  - route53:ChangeResourceRecordSets
                  - route53:ChangeTagsForResource
                  - route53:CreateHostedZone
                  - route53:DeleteHostedZone
                  - route53:GetChange
                  - route53:GetHostedZone
                  - route53:ListHostedZones
                  - route53:ListHostedZonesByName
                  - route53:ListResourceRecordSets
                  - autoscaling:DescribeAutoScalingGroups
                  - tag:GetResources
                  - iam:CreateAccessKey
                  - iam:CreateUser
                  - iam:DeleteAccessKey
                  - iam:DeleteUser
                  - iam:DeleteUserPolicy
                  - iam:GetUserPolicy
                  - iam:ListAccessKeys
                  - iam:PutUserPolicy
                  - iam:TagUser
                  - iam:GetUserPolicy
                  - iam:ListAccessKeys
  #
  # Generates OpenShift4 installation configuration and uploads them to the IgnitionBucket
  #
  # During cluster Bootstrap, the initial cluster nodes fetch the installation files from the IgnitionBucket and use
  # these configurations to install OpenShift and install K8s manifests
  #
  OpenShiftGenerateIgnition:
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3002
          ignore_reasons:
            E3002: AmiId is required and sent to generate ignition
    Type: "AWSQS::OpenShift::Manager"
    Properties:
      Action: "GENERATE_IGNITION"
      ClusterName: !Ref ClusterName
      LogLevel: !Ref LogLevel
      IgnitionBucket: !Ref IgnitionBucket
      HostedZoneName: !Ref HostedZoneName
      SSHKey: !Ref SSHKey
      WorkerNodeSize: !Ref NumberOfNodes
      MachineNetwork: !Ref VPCCIDR
      AvailabilityZones: !Split
        - ","
        - !Ref AvailabilityZones
      PublicSubnets:
        - !If
          - UsePublicNetworks
          - !Ref PublicSubnet1ID
          - !Ref PrivateSubnet1ID
        - !If
          - UsePublicNetworks
          - !Ref PublicSubnet2ID
          - !Ref PrivateSubnet2ID
        - !If
          - UsePublicNetworks
          - !Ref PublicSubnet3ID
          - !Ref PrivateSubnet3ID
      PrivateSubnets:
        - !Ref PrivateSubnet1ID
        - !Ref PrivateSubnet2ID
        - !Ref PrivateSubnet3ID
      Internal: !Ref Internal
      AwsAccessKeyId: !Ref OpenShift4ClusterManagerAccessKeys
      AwsSecretAccessKey: !GetAtt OpenShift4ClusterManagerAccessKeys.SecretAccessKey
      WorkerInstanceProfileName: !Ref WorkerInstanceProfileName
      CertificateArn: !Ref SSLCertificateId
      PullSecret: !Ref PullSecret
      OpenShiftMirrorURL: !Ref OpenShiftMirrorURL
      OpenShiftClientBinary: !Ref OpenShiftClientBinary
      OpenShiftInstallBinary: !Ref OpenShiftInstallBinary
      OpenShiftVersion: !Ref OpenShiftVersion
      AmiId: !If
        - NoRhcosAmiParameter
        - !FindInMap
          - RhcosAmiMap
          - !Ref AWS::Region
          - !FindInMap
            - NoDotVersion
            - !Ref OpenshiftContainerPlatformVersion
            - Value
        - !Ref AmiId
  OpenShiftBootstrap:
    DependsOn: OpenShiftGenerateIgnition
    Type: "AWSQS::OpenShift::Manager"
    Properties:
      Action: "BOOTSTRAP"
      ClusterName: !Ref ClusterName
      HostedZoneName: !Ref HostedZoneName
      LogLevel: !Ref LogLevel
      CertificateArn: !Ref SSLCertificateId
      ClusterIngressCertificateArn: !Ref ClusterIngressCertificateArn
      ClusterIngressPrivateKeySecretName: !Ref ClusterIngressPrivateKeySecretName
      Internal: !Ref Internal
  #
  # Sets up Networking
  # - Load Balancers for EXTernal and INTernal API endpoints
  # - Private DNS Zone for ${CLUSTER_NAME}.${DOMAINNAME} e.g. mycluster.example.com
  #
  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/openshift4/os4-network.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        ClusterName: !Ref ClusterName
        InfrastructureName: !GetAtt 'OpenShiftGenerateIgnition.InfrastructureId'
        VpcId: !Ref VPCID
        ContainerAccessCIDR: !Ref ContainerAccessCIDR
        HostedZoneName: !Ref HostedZoneName
        HostedZoneID: !Ref HostedZoneID
        ACMCertificateId: !Ref SSLCertificateId
        Internal: !Ref Internal
        PublicSubnets: !Join
          - ","
          - 
            - !If
              - UsePublicNetworks
              - !Ref PublicSubnet1ID
              - !Ref PrivateSubnet1ID
            - !If
              - UsePublicNetworks
              - !Ref PublicSubnet2ID
              - !Ref PrivateSubnet2ID
            - !If
              - UsePublicNetworks
              - !Ref PublicSubnet3ID
              - !Ref PrivateSubnet3ID
        PrivateSubnets: !Join
          - ","
          - [!Ref PrivateSubnet1ID, !Ref PrivateSubnet2ID, !Ref PrivateSubnet3ID]
  #
  # Generates VPC Security Groups and Cluster IAM Roles
  #
  # Resources **must** be named with the cluster's unique InfrastructureName that is generated by `OpenShift4Setup`
  #
  SecurityStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/openshift4/os4-security.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        InfrastructureName: !GetAtt 'OpenShiftGenerateIgnition.InfrastructureId'
        VpcCidr: !Ref VPCCIDR
        VpcId: !Ref VPCID
        MasterInstanceProfileName: !Ref MasterInstanceProfileName
        WorkerInstanceProfileName: !Ref WorkerInstanceProfileName
        ApplicationElbSecurityGroupId: !GetAtt NetworkStack.Outputs.ApplicationElbSecurityGroupId
        ContainerAccessCIDR: !Ref ContainerAccessCIDR
  #
  # OpenShift 4 requires an initial 'bootstrap' server to start the cluster. After the cluster starts up, you can safely
  # terminate this instance.
  #
  # TODO: Move this stack to a Custom Resource so we can terminate it after the cluster initializes
  #
  BootStrapStack:
    Type: AWS::CloudFormation::Stack
    Condition: IsBootstrapEnabled
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/openshift4/os4-bootstrap.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        InfrastructureName: !GetAtt 'OpenShiftGenerateIgnition.InfrastructureId'
        OpenshiftContainerPlatformVersion: !Ref OpenshiftContainerPlatformVersion
        RhcosAmi: !If
          - NoRhcosAmiParameter
          - !FindInMap
            - RhcosAmiMap
            - !Ref AWS::Region
            - !FindInMap
              - NoDotVersion
              - !Ref OpenshiftContainerPlatformVersion
              - Value
          - !Ref AmiId
        AllowedBootstrapSshCidr: !Ref RemoteAccessCIDR
        Subnet: !Ref PrivateSubnet1ID
        BootstrapIgnitionLocation: !Sub s3://${IgnitionBucket}/${ClusterName}/bootstrap.ign
        VpcId: !Ref VPCID
        MasterSecurityGroupId: !GetAtt 'SecurityStack.Outputs.MasterSecurityGroupId'
        RegisterNlbIpTargetsLambdaArn: !GetAtt 'NetworkStack.Outputs.RegisterNlbIpTargetsLambda'
        ExternalApiTargetGroupArn: !GetAtt 'NetworkStack.Outputs.ExternalApiTargetGroupArn'
        InternalApiTargetGroupArn: !GetAtt 'NetworkStack.Outputs.InternalApiTargetGroupArn'
        InternalServiceTargetGroupArn: !GetAtt 'NetworkStack.Outputs.InternalServiceTargetGroupArn'
  #
  # Set up the Control Plane (master nodes)
  #
  # Each master node is placed in a separate AZ and connected to the API EXTernal and INTernal loadbalancers.
  #
  # Master nodes also contain the ETCD cluster and DNS records **must** be set up to point the control plane private IPs
  #
  ControlPlaneStack:
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3005
            - E9902
          ignore_reasons:
            E3005: Bootstrap will exist as a dependancy
            E9902: Parameter name is same
    DependsOn: BootStrapStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/openshift4/os4-controlplane.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        OpenshiftContainerPlatformVersion: !Ref OpenshiftContainerPlatformVersion
        InfrastructureName: !GetAtt 'OpenShiftGenerateIgnition.InfrastructureId'
        MasterInstanceType: !Ref MasterInstanceType
        RhcosAmi: !If
          - NoRhcosAmiParameter
          - !FindInMap
            - RhcosAmiMap
            - !Ref AWS::Region
            - !FindInMap
              - NoDotVersion
              - !Ref OpenshiftContainerPlatformVersion
              - Value
          - !Ref AmiId
        IgnitionLocation: !Sub s3://${IgnitionBucket}/${ClusterName}/master.ign
        MasterSecurityGroupId: !GetAtt 'SecurityStack.Outputs.MasterSecurityGroupId'
        RegisterNlbIpTargetsLambdaArn: !GetAtt 'NetworkStack.Outputs.RegisterNlbIpTargetsLambda'
        ExternalApiTargetGroupArn: !GetAtt 'NetworkStack.Outputs.ExternalApiTargetGroupArn'
        InternalApiTargetGroupArn: !GetAtt 'NetworkStack.Outputs.InternalApiTargetGroupArn'
        InternalServiceTargetGroupArn: !GetAtt 'NetworkStack.Outputs.InternalServiceTargetGroupArn'
        PrivateHostedZoneId: !GetAtt 'NetworkStack.Outputs.PrivateHostedZoneId'
        PrivateHostedZoneName: !Join [".", [!Ref ClusterName, !Ref HostedZoneName]]
        Master0Subnet: !Ref PrivateSubnet1ID
        Master1Subnet: !Ref PrivateSubnet2ID
        Master2Subnet: !Ref PrivateSubnet3ID
        MasterInstanceProfileName: !GetAtt 'SecurityStack.Outputs.MasterInstanceProfile'
  #
  # We will need to set up at least 1 worker in order to start up the cluster because certain OpenShift Operators
  # must start up on worker nodes
  #
  # After the cluster initializes, it will create the remaining workers
  WorkerStack:
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3005
            - E9902
          ignore_reasons:
            E3005: Bootstrap will exist as a dependancy
            E9902: Parameter name is same
    DependsOn: BootStrapStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/openshift4/os4-worker.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        OpenshiftContainerPlatformVersion: !Ref OpenshiftContainerPlatformVersion
        InfrastructureName: !GetAtt 'OpenShiftGenerateIgnition.InfrastructureId'
        WorkerInstanceType: !Ref NodesInstanceType
        RhcosAmi: !If
          - NoRhcosAmiParameter
          - !FindInMap
            - RhcosAmiMap
            - !Ref AWS::Region
            - !FindInMap
              - NoDotVersion
              - !Ref OpenshiftContainerPlatformVersion
              - Value
          - !Ref AmiId
        Subnet: !Ref PrivateSubnet1ID
        WorkerInstanceProfileName: !GetAtt 'SecurityStack.Outputs.WorkerInstanceProfile'
        WorkerSecurityGroupId: !GetAtt 'SecurityStack.Outputs.WorkerSecurityGroupId'
Conditions:
    NoRhcosAmiParameter:
      Fn::Equals:
        - !Ref AmiId
        - ""
    IsBootstrapEnabled: !Equals
      - !Ref EnableBootstrap
      - 'yes'
    UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
    UsePublicNetworks: !Equals [!Ref Internal, "no"]
Mappings:
  NoDotVersion:
    '4.6':
      Value: '46'
    '4.8':
      Value: '48'
  RhcosAmiMap:
    'us-east-1':
      "46": ami-009cbe327d180d666
      "48": ami-05ed2cc6e70392ff9
    us-east-2:
      "46": ami-0346f64579665ce3c
      "48": ami-00b3a5054da356288
    us-west-1:
      "46": ami-07c185c787029b522
      "48": ami-021f626622b5238f3
    us-west-2:
      "46": ami-01105d480bb47353f
      "48": ami-0c9fd8b47bfd717e8
    sa-east-1:
      "46": ami-081f13881a31af160
      "48": ami-01242f1bac18cc0fd
    eu-west-3:
      "46": ami-083f281d2864a71de
      "48": ami-0eb0bf894fdf1d416
    eu-west-2:
      "46": ami-0291fd4543d6940f4
      "48": ami-0c190f5d05b071c7a
    eu-west-1:
      "46": ami-0e514a30ad261c978
      "48": ami-08e20744bd1c89c8e
    eu-north-1:
      "46": ami-06d01bfaf14ad66a3
      "48": ami-03a3119ba25eb55b1
    eu-central-1:
      "46": ami-0a51f61236e6fc6f2
      "48": ami-0510f6f15c25b29d4
    eu-south-1:
      "48": ami-04f719435625c1313
    ca-central-1:
      "46": ami-0f5825ef10c76de32
      "48": ami-03291c3e2b74c32b9
    ap-southeast-2:
      "46": ami-0e3e2b2ea00c35823
      "48": ami-013484d0474ab5860
    ap-east-1:
      "48": ami-0f6debc614042ce76
    ap-southeast-1:
      "46": ami-0a6a0f1f6106708c4
      "48": ami-0b09ad848356811c7
    ap-south-1:
      "46": ami-09253ba33f828d47f
      "48": ami-0650f4166d12ccead
    ap-northeast-1:
      "46": ami-0cb46ba6945dbfebe
      "48": ami-0423a1bf292f34dc3
    ap-northeast-2:
      "46": ami-01e554d608de6087a
      "48": ami-0889161041cb9d77f
    ap-northeast-3:
      "48": ami-00564b0d6cbb676b1
    me-south-1:
      "46": ami-05a6ae5eadb5b244d
      "48": ami-073928aa740f738bd
Outputs:
  OpenShiftUI:
    Description: The URL OpenShiftUI
    Value: !Sub "https://console-openshift-console.apps.${ClusterName}.${HostedZoneName}"
  KubeAdminPassword:
    Value: !GetAtt OpenShiftGenerateIgnition.KubeAdminPasswordArn
    Description: Location in AWS Secrets Manager for the Open Shift Admin password
  KubeConfig:
    Value: !GetAtt OpenShiftGenerateIgnition.KubeConfigArn
    Description: Location in AWS Secrets Manager for the Open Shift kubeadmin file
  IgnitionBucket:
    Value: !Ref IgnitionBucket
    Description: ARN of the S3 Bucket that holds Ignition files